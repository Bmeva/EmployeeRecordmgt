# Generated by Django 5.0.7 on 2024-08-14 22:54

import django.db.models.deletion
import django_countries.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_department', models.CharField(max_length=120)),
                ('department_code', models.CharField(max_length=120, unique=True)),
                ('description', models.CharField(max_length=500)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('modified_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('training_provider', models.CharField(max_length=200)),
                ('training_location', models.CharField(choices=[('PREMISE', 'Premise'), ('REMOTE', 'Remote'), ('HYBRID', 'Hybrid')], max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('duration', models.DurationField()),
                ('start_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=120)),
                ('middle_name', models.CharField(max_length=120)),
                ('last_name', models.CharField(max_length=120)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('date_of_birth', models.DateField()),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('contact_number', models.CharField(max_length=120, unique=True)),
                ('address_line_1', models.CharField(max_length=150)),
                ('address_line_2', models.CharField(max_length=150)),
                ('city', models.CharField(max_length=120)),
                ('nationality', django_countries.fields.CountryField(max_length=2)),
                ('post_or_zip', models.CharField(max_length=120)),
                ('employee_id', models.CharField(max_length=120, unique=True)),
                ('job_title', models.CharField(max_length=120)),
                ('employement_type', models.CharField(choices=[('FT', 'Full-Time'), ('PT', 'Part-Time'), ('C', 'Contractor')], max_length=120)),
                ('supervisor', models.CharField(max_length=120, null=True)),
                ('next_of_kin', models.CharField(max_length=120)),
                ('next_of_kin_contact', models.CharField(max_length=120)),
                ('next_of_kin_relationship', models.CharField(max_length=120)),
                ('comments', models.CharField(blank=True, max_length=600, null=True)),
                ('status', models.CharField(max_length=150)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('departments', models.ManyToManyField(blank=True, to='API.department')),
            ],
            options={
                'verbose_name': 'Employee Detail',
                'verbose_name_plural': 'Employee Detail',
            },
        ),
        migrations.AddField(
            model_name='department',
            name='department_head',
            field=models.OneToOneField(blank=True, max_length=120, null=True, on_delete=django.db.models.deletion.SET_NULL, to='API.employeedetails'),
        ),
        migrations.CreateModel(
            name='JobRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=100)),
                ('required_level', models.CharField(choices=[('BEGINER', 'Beginer'), ('INTERMEDIATE', 'Female'), ('ADVANCED', 'Advanced')], max_length=100)),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.skill')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingNeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('expected_completion_date', models.DateField()),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.employeedetails')),
                ('training', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.training')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proficiency_level', models.CharField(choices=[('BEGINER', 'Beginer'), ('INTERMEDIATE', 'Female'), ('ADVANCED', 'Advanced')], max_length=100)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.employeedetails')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.skill')),
            ],
            options={
                'unique_together': {('employee', 'skill')},
            },
        ),
    ]
